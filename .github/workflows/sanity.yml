name: Sanity tests
on:
  workflow_call:
    inputs:
      matrix_exclude:
        # https://docs.ansible.com/ansible/latest/reference_appendices/release_and_maintenance.html#ansible-core-support-matrix
        # 2.9 supports Python 3.5-3.8
        # 2.12 supports Python 3.8-3.10
        # 2.13 supports Python 3.8-3.10
        # 2.14 supports Python 3.9-3.11
        # 2.15 supports Python 3.9-3.11
        # https://docs.ansible.com/ansible/devel/roadmap/ROADMAP_2_16.html
        # milestone is 2.15 until 2023-05-01
        # devel is 2.16 until 2023-09-18
        default: >-
          [
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.9"
            },
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.10"
            },
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.12",
              "python-version": "3.7"
            },
            {
              "ansible-version": "stable-2.12",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.13",
              "python-version": "3.7"
            },
            {
              "ansible-version": "stable-2.13",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.14",
              "python-version": "3.7"
            },
            {
              "ansible-version": "stable-2.14",
              "python-version": "3.8"
            },
            {
              "ansible-version": "stable-2.15",
              "python-version": "3.7"
            },
            {
              "ansible-version": "stable-2.15",
              "python-version": "3.8"
            },
            {
              "ansible-version": "milestone",
              "python-version": "3.7"
            },
            {
              "ansible-version": "milestone",
              "python-version": "3.8"
            },
            {
              "ansible-version": "devel",
              "python-version": "3.7"
            },
            {
              "ansible-version": "devel",
              "python-version": "3.8"
            }
          ]
        required: false
        type: string
      matrix_include:
        # python 3.6 is not available after ubuntu-20.04
        # python 3.6 is not supported on ansible 2.12+
        default: >-
          [
            {
              "os": "ubuntu-20.04",
              "ansible-version": "stable-2.9",
              "python-version": "3.6"
            },
          ]
        required: false
        type: string
      unstable:
        default: >-
          [
            "devel",
          ]
        required: false
        type: string

jobs:
  sanity:
    env:
      PY_COLORS: "1"
      source_directory: "./source"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ansible-version:
          - stable-2.9
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - stable-2.15
          - milestone
          - devel
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        exclude: ${{ fromJSON(inputs.matrix_exclude) }}
        include: ${{ fromJSON(inputs.matrix_include) }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ contains(fromJSON(inputs.unstable), matrix.ansible-version) }}

    name: "py${{ matrix.python-version }} / ${{ matrix.os }} / ${{ matrix.ansible-version }}"
    steps:
      - name: Checkout the collection repository
        uses: ansible-network/github_actions/.github/actions/checkout_dependency@main
        with:
          path: ${{ env.source_directory }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: "0"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible-core (${{ matrix.ansible-version }})
        run: python3 -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Read collection metadata from galaxy.yml
        id: identify
        uses: ansible-network/github_actions/.github/actions/identify_collection@main
        with:
          source_path: ${{ env.source_directory }}

      - name: Build and install the collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: false
          source_path: ${{ env.source_directory }}
          collection_path: ${{ steps.identify.outputs.collection_path }}
          tar_file: ${{ steps.identify.outputs.tar_file }}

      - name: Print the ansible version
        run: ansible --version

      - name: Print the python dependencies
        run: python3 -m pip list

      - name: Run sanity tests
        run: ansible-test sanity --requirements --color --python ${{ matrix.python-version }}
        working-directory: ${{ steps.identify.outputs.collection_path }}
