name: Integration tests, no CML, dependencies from galaxy
on:
  workflow_call:
    inputs:
      integration_test_path:
        default: tests/integration/targets
        required: false
        type: string
      matrix_exclude:
        # 2.9/3.9 not supported
        # 2.9/3.10 not supported
        # 2.9/3.11 not supported
        # 2.12/3.11 not supported
        # 2.13/3.11 not supported
        # 2.14/3.8 not supported
        # milestone/3.8 not supported
        # devel/3.8 not supported
        default: >-
          [
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.9"
            },
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.10"
            },
            {
              "ansible-version": "stable-2.9",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.12",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.13",
              "python-version": "3.11"
            },
            {
              "ansible-version": "stable-2.14",
              "python-version": "3.8"
            },
            {
              "ansible-version": "milestone",
              "python-version": "3.8"
            },
            {
              "ansible-version": "devel",
              "python-version": "3.8"
            }
          ]
        required: false
        type: string
      pytest_addopts:
        default: ""
        required: false
        type: string
    secrets:
      GH_TOKEN:
        required: false

jobs:
  integration:
    env:
      PY_COLORS: "1"
      source_directory: "./source"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible-version:
          - stable-2.9
          - stable-2.12
          - stable-2.13
          - stable-2.14
          - milestone
          - devel
        python-version:
          # ansible-navigator supports python 3.8+
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        exclude: ${{ fromJSON(inputs.matrix_exclude) }}

    name: "py${{ matrix.python-version }} / ${{ matrix.ansible-version }}"
    steps:
      - name: Checkout the collection repository
        uses: actions/checkout@v3
        with:
          path: ${{ env.source_directory }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: "0"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install wheel now for faster builds
        run: python3 -m pip install wheel --upgrade

      - name: Install ansible-core (${{ matrix.ansible-version }})
        run: python3 -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Read collection metadata from galaxy.yml
        id: identify
        uses: ansible-network/github_actions/.github/actions/identify_collection@main
        with:
          source_path: ${{ env.source_directory }}

      - name: Build and install the collection
        uses: ansible-network/github_actions/.github/actions/build_install_collection@main
        with:
          install_python_dependencies: true
          source_path: ${{ env.source_directory }}
          collection_path: ${{ steps.identify.outputs.collection_path }}
          tar_file: ${{ steps.identify.outputs.tar_file }}

      - name: Print the ansible version
        run: ansible --version

      - name: Print the python dependencies
        run: python3 -m pip list

      - name: Run integration tests
        run: >-
          python -m pytest tests/integration
          ${{ inputs.pytest_addopts }}
        env:
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        working-directory: ${{ steps.identify.outputs.collection_path }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: /home/runner/test_logs/
