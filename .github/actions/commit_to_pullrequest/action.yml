name: commit to pull request
description: |
  checkout pull request, run provided script and push back changes
  The action expects a python script to be executed

inputs:
  token:
    description: The Github token to use to perform commit.
    required: true
  python_libs:
    description: |
      Required libraries to execute the python script
      for example 'pyyaml urllib'
    required: false
    default: ""
  python_executable_url:
    description: URL of the script to download to update the repository
    required: true
  commit_message:
    description: commit message
    required: false
    default: Apply automatic changes
  file_pattern:
    description: File pattern used for `git add`. For example `src/*.js`
    required: false
    default: "."
outputs:
  changes_detected:
    description: Value is "true", if the repository was dirty and file changes have been detected. Value is "false", if no changes have been detected.
    value: ${{ steps.commit.outputs.changes_detected }}

runs:
  using: composite
  steps:
    - name: checkout fork repository
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install required python libraries
      run: pip install -U ${{ inputs.python_libs }}
      shell: bash
      if: inputs.python_libs != ''

    - name: Download python script
      run: >-
        curl -o /tmp/update_repository.py ${{ inputs.python_executable_url }}
      shell: bash

    - name: Execute python script
      run: >-
        python /tmp/update_repository.py
      shell: bash

    - name: Commit and push changes
      id: commit
      run: |
        if [[ -n $(git status -s) ]]; then
          echo -e "changes detected\n$(git status -s)"
          git add -A ${{ inputs.file_pattern }}
          git -c user.name="$GIT_USER_NAME" -c user.email="$GIT_USER_EMAIL" commit -m "${{ inputs.commit_message }}" --author="$GIT_AUTHOR"
          git push origin ${{ github.head_ref }}
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GIT_USER_NAME: "github-actions[bot]"
        GIT_USER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
        GIT_AUTHOR: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
